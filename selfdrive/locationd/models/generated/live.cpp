#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_647664208034133157) {
   out_647664208034133157[0] = 0;
   out_647664208034133157[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_647664208034133157[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_647664208034133157[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_647664208034133157[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_647664208034133157[5] = -sin(in_vec[1]);
   out_647664208034133157[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_647664208034133157[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_647664208034133157[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_647664208034133157[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_647664208034133157[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_647664208034133157[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_647664208034133157[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_647664208034133157[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_647664208034133157[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_647664208034133157[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_647664208034133157[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_647664208034133157[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_801155884322822811) {
   out_801155884322822811[0] = delta_x[0] + nom_x[0];
   out_801155884322822811[1] = delta_x[1] + nom_x[1];
   out_801155884322822811[2] = delta_x[2] + nom_x[2];
   out_801155884322822811[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_801155884322822811[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_801155884322822811[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_801155884322822811[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_801155884322822811[7] = delta_x[6] + nom_x[7];
   out_801155884322822811[8] = delta_x[7] + nom_x[8];
   out_801155884322822811[9] = delta_x[8] + nom_x[9];
   out_801155884322822811[10] = delta_x[9] + nom_x[10];
   out_801155884322822811[11] = delta_x[10] + nom_x[11];
   out_801155884322822811[12] = delta_x[11] + nom_x[12];
   out_801155884322822811[13] = delta_x[12] + nom_x[13];
   out_801155884322822811[14] = delta_x[13] + nom_x[14];
   out_801155884322822811[15] = delta_x[14] + nom_x[15];
   out_801155884322822811[16] = delta_x[15] + nom_x[16];
   out_801155884322822811[17] = delta_x[16] + nom_x[17];
   out_801155884322822811[18] = delta_x[17] + nom_x[18];
   out_801155884322822811[19] = delta_x[18] + nom_x[19];
   out_801155884322822811[20] = delta_x[19] + nom_x[20];
   out_801155884322822811[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6625171334681773460) {
   out_6625171334681773460[0] = -nom_x[0] + true_x[0];
   out_6625171334681773460[1] = -nom_x[1] + true_x[1];
   out_6625171334681773460[2] = -nom_x[2] + true_x[2];
   out_6625171334681773460[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6625171334681773460[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6625171334681773460[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6625171334681773460[6] = -nom_x[7] + true_x[7];
   out_6625171334681773460[7] = -nom_x[8] + true_x[8];
   out_6625171334681773460[8] = -nom_x[9] + true_x[9];
   out_6625171334681773460[9] = -nom_x[10] + true_x[10];
   out_6625171334681773460[10] = -nom_x[11] + true_x[11];
   out_6625171334681773460[11] = -nom_x[12] + true_x[12];
   out_6625171334681773460[12] = -nom_x[13] + true_x[13];
   out_6625171334681773460[13] = -nom_x[14] + true_x[14];
   out_6625171334681773460[14] = -nom_x[15] + true_x[15];
   out_6625171334681773460[15] = -nom_x[16] + true_x[16];
   out_6625171334681773460[16] = -nom_x[17] + true_x[17];
   out_6625171334681773460[17] = -nom_x[18] + true_x[18];
   out_6625171334681773460[18] = -nom_x[19] + true_x[19];
   out_6625171334681773460[19] = -nom_x[20] + true_x[20];
   out_6625171334681773460[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6447180147902774969) {
   out_6447180147902774969[0] = 1.0;
   out_6447180147902774969[1] = 0;
   out_6447180147902774969[2] = 0;
   out_6447180147902774969[3] = 0;
   out_6447180147902774969[4] = 0;
   out_6447180147902774969[5] = 0;
   out_6447180147902774969[6] = 0;
   out_6447180147902774969[7] = 0;
   out_6447180147902774969[8] = 0;
   out_6447180147902774969[9] = 0;
   out_6447180147902774969[10] = 0;
   out_6447180147902774969[11] = 0;
   out_6447180147902774969[12] = 0;
   out_6447180147902774969[13] = 0;
   out_6447180147902774969[14] = 0;
   out_6447180147902774969[15] = 0;
   out_6447180147902774969[16] = 0;
   out_6447180147902774969[17] = 0;
   out_6447180147902774969[18] = 0;
   out_6447180147902774969[19] = 0;
   out_6447180147902774969[20] = 0;
   out_6447180147902774969[21] = 0;
   out_6447180147902774969[22] = 1.0;
   out_6447180147902774969[23] = 0;
   out_6447180147902774969[24] = 0;
   out_6447180147902774969[25] = 0;
   out_6447180147902774969[26] = 0;
   out_6447180147902774969[27] = 0;
   out_6447180147902774969[28] = 0;
   out_6447180147902774969[29] = 0;
   out_6447180147902774969[30] = 0;
   out_6447180147902774969[31] = 0;
   out_6447180147902774969[32] = 0;
   out_6447180147902774969[33] = 0;
   out_6447180147902774969[34] = 0;
   out_6447180147902774969[35] = 0;
   out_6447180147902774969[36] = 0;
   out_6447180147902774969[37] = 0;
   out_6447180147902774969[38] = 0;
   out_6447180147902774969[39] = 0;
   out_6447180147902774969[40] = 0;
   out_6447180147902774969[41] = 0;
   out_6447180147902774969[42] = 0;
   out_6447180147902774969[43] = 0;
   out_6447180147902774969[44] = 1.0;
   out_6447180147902774969[45] = 0;
   out_6447180147902774969[46] = 0;
   out_6447180147902774969[47] = 0;
   out_6447180147902774969[48] = 0;
   out_6447180147902774969[49] = 0;
   out_6447180147902774969[50] = 0;
   out_6447180147902774969[51] = 0;
   out_6447180147902774969[52] = 0;
   out_6447180147902774969[53] = 0;
   out_6447180147902774969[54] = 0;
   out_6447180147902774969[55] = 0;
   out_6447180147902774969[56] = 0;
   out_6447180147902774969[57] = 0;
   out_6447180147902774969[58] = 0;
   out_6447180147902774969[59] = 0;
   out_6447180147902774969[60] = 0;
   out_6447180147902774969[61] = 0;
   out_6447180147902774969[62] = 0;
   out_6447180147902774969[63] = 0;
   out_6447180147902774969[64] = 0;
   out_6447180147902774969[65] = 0;
   out_6447180147902774969[66] = -0.5*state[4];
   out_6447180147902774969[67] = -0.5*state[5];
   out_6447180147902774969[68] = -0.5*state[6];
   out_6447180147902774969[69] = 0;
   out_6447180147902774969[70] = 0;
   out_6447180147902774969[71] = 0;
   out_6447180147902774969[72] = 0;
   out_6447180147902774969[73] = 0;
   out_6447180147902774969[74] = 0;
   out_6447180147902774969[75] = 0;
   out_6447180147902774969[76] = 0;
   out_6447180147902774969[77] = 0;
   out_6447180147902774969[78] = 0;
   out_6447180147902774969[79] = 0;
   out_6447180147902774969[80] = 0;
   out_6447180147902774969[81] = 0;
   out_6447180147902774969[82] = 0;
   out_6447180147902774969[83] = 0;
   out_6447180147902774969[84] = 0;
   out_6447180147902774969[85] = 0;
   out_6447180147902774969[86] = 0;
   out_6447180147902774969[87] = 0.5*state[3];
   out_6447180147902774969[88] = 0.5*state[6];
   out_6447180147902774969[89] = -0.5*state[5];
   out_6447180147902774969[90] = 0;
   out_6447180147902774969[91] = 0;
   out_6447180147902774969[92] = 0;
   out_6447180147902774969[93] = 0;
   out_6447180147902774969[94] = 0;
   out_6447180147902774969[95] = 0;
   out_6447180147902774969[96] = 0;
   out_6447180147902774969[97] = 0;
   out_6447180147902774969[98] = 0;
   out_6447180147902774969[99] = 0;
   out_6447180147902774969[100] = 0;
   out_6447180147902774969[101] = 0;
   out_6447180147902774969[102] = 0;
   out_6447180147902774969[103] = 0;
   out_6447180147902774969[104] = 0;
   out_6447180147902774969[105] = 0;
   out_6447180147902774969[106] = 0;
   out_6447180147902774969[107] = 0;
   out_6447180147902774969[108] = -0.5*state[6];
   out_6447180147902774969[109] = 0.5*state[3];
   out_6447180147902774969[110] = 0.5*state[4];
   out_6447180147902774969[111] = 0;
   out_6447180147902774969[112] = 0;
   out_6447180147902774969[113] = 0;
   out_6447180147902774969[114] = 0;
   out_6447180147902774969[115] = 0;
   out_6447180147902774969[116] = 0;
   out_6447180147902774969[117] = 0;
   out_6447180147902774969[118] = 0;
   out_6447180147902774969[119] = 0;
   out_6447180147902774969[120] = 0;
   out_6447180147902774969[121] = 0;
   out_6447180147902774969[122] = 0;
   out_6447180147902774969[123] = 0;
   out_6447180147902774969[124] = 0;
   out_6447180147902774969[125] = 0;
   out_6447180147902774969[126] = 0;
   out_6447180147902774969[127] = 0;
   out_6447180147902774969[128] = 0;
   out_6447180147902774969[129] = 0.5*state[5];
   out_6447180147902774969[130] = -0.5*state[4];
   out_6447180147902774969[131] = 0.5*state[3];
   out_6447180147902774969[132] = 0;
   out_6447180147902774969[133] = 0;
   out_6447180147902774969[134] = 0;
   out_6447180147902774969[135] = 0;
   out_6447180147902774969[136] = 0;
   out_6447180147902774969[137] = 0;
   out_6447180147902774969[138] = 0;
   out_6447180147902774969[139] = 0;
   out_6447180147902774969[140] = 0;
   out_6447180147902774969[141] = 0;
   out_6447180147902774969[142] = 0;
   out_6447180147902774969[143] = 0;
   out_6447180147902774969[144] = 0;
   out_6447180147902774969[145] = 0;
   out_6447180147902774969[146] = 0;
   out_6447180147902774969[147] = 0;
   out_6447180147902774969[148] = 0;
   out_6447180147902774969[149] = 0;
   out_6447180147902774969[150] = 0;
   out_6447180147902774969[151] = 0;
   out_6447180147902774969[152] = 0;
   out_6447180147902774969[153] = 1.0;
   out_6447180147902774969[154] = 0;
   out_6447180147902774969[155] = 0;
   out_6447180147902774969[156] = 0;
   out_6447180147902774969[157] = 0;
   out_6447180147902774969[158] = 0;
   out_6447180147902774969[159] = 0;
   out_6447180147902774969[160] = 0;
   out_6447180147902774969[161] = 0;
   out_6447180147902774969[162] = 0;
   out_6447180147902774969[163] = 0;
   out_6447180147902774969[164] = 0;
   out_6447180147902774969[165] = 0;
   out_6447180147902774969[166] = 0;
   out_6447180147902774969[167] = 0;
   out_6447180147902774969[168] = 0;
   out_6447180147902774969[169] = 0;
   out_6447180147902774969[170] = 0;
   out_6447180147902774969[171] = 0;
   out_6447180147902774969[172] = 0;
   out_6447180147902774969[173] = 0;
   out_6447180147902774969[174] = 0;
   out_6447180147902774969[175] = 1.0;
   out_6447180147902774969[176] = 0;
   out_6447180147902774969[177] = 0;
   out_6447180147902774969[178] = 0;
   out_6447180147902774969[179] = 0;
   out_6447180147902774969[180] = 0;
   out_6447180147902774969[181] = 0;
   out_6447180147902774969[182] = 0;
   out_6447180147902774969[183] = 0;
   out_6447180147902774969[184] = 0;
   out_6447180147902774969[185] = 0;
   out_6447180147902774969[186] = 0;
   out_6447180147902774969[187] = 0;
   out_6447180147902774969[188] = 0;
   out_6447180147902774969[189] = 0;
   out_6447180147902774969[190] = 0;
   out_6447180147902774969[191] = 0;
   out_6447180147902774969[192] = 0;
   out_6447180147902774969[193] = 0;
   out_6447180147902774969[194] = 0;
   out_6447180147902774969[195] = 0;
   out_6447180147902774969[196] = 0;
   out_6447180147902774969[197] = 1.0;
   out_6447180147902774969[198] = 0;
   out_6447180147902774969[199] = 0;
   out_6447180147902774969[200] = 0;
   out_6447180147902774969[201] = 0;
   out_6447180147902774969[202] = 0;
   out_6447180147902774969[203] = 0;
   out_6447180147902774969[204] = 0;
   out_6447180147902774969[205] = 0;
   out_6447180147902774969[206] = 0;
   out_6447180147902774969[207] = 0;
   out_6447180147902774969[208] = 0;
   out_6447180147902774969[209] = 0;
   out_6447180147902774969[210] = 0;
   out_6447180147902774969[211] = 0;
   out_6447180147902774969[212] = 0;
   out_6447180147902774969[213] = 0;
   out_6447180147902774969[214] = 0;
   out_6447180147902774969[215] = 0;
   out_6447180147902774969[216] = 0;
   out_6447180147902774969[217] = 0;
   out_6447180147902774969[218] = 0;
   out_6447180147902774969[219] = 1.0;
   out_6447180147902774969[220] = 0;
   out_6447180147902774969[221] = 0;
   out_6447180147902774969[222] = 0;
   out_6447180147902774969[223] = 0;
   out_6447180147902774969[224] = 0;
   out_6447180147902774969[225] = 0;
   out_6447180147902774969[226] = 0;
   out_6447180147902774969[227] = 0;
   out_6447180147902774969[228] = 0;
   out_6447180147902774969[229] = 0;
   out_6447180147902774969[230] = 0;
   out_6447180147902774969[231] = 0;
   out_6447180147902774969[232] = 0;
   out_6447180147902774969[233] = 0;
   out_6447180147902774969[234] = 0;
   out_6447180147902774969[235] = 0;
   out_6447180147902774969[236] = 0;
   out_6447180147902774969[237] = 0;
   out_6447180147902774969[238] = 0;
   out_6447180147902774969[239] = 0;
   out_6447180147902774969[240] = 0;
   out_6447180147902774969[241] = 1.0;
   out_6447180147902774969[242] = 0;
   out_6447180147902774969[243] = 0;
   out_6447180147902774969[244] = 0;
   out_6447180147902774969[245] = 0;
   out_6447180147902774969[246] = 0;
   out_6447180147902774969[247] = 0;
   out_6447180147902774969[248] = 0;
   out_6447180147902774969[249] = 0;
   out_6447180147902774969[250] = 0;
   out_6447180147902774969[251] = 0;
   out_6447180147902774969[252] = 0;
   out_6447180147902774969[253] = 0;
   out_6447180147902774969[254] = 0;
   out_6447180147902774969[255] = 0;
   out_6447180147902774969[256] = 0;
   out_6447180147902774969[257] = 0;
   out_6447180147902774969[258] = 0;
   out_6447180147902774969[259] = 0;
   out_6447180147902774969[260] = 0;
   out_6447180147902774969[261] = 0;
   out_6447180147902774969[262] = 0;
   out_6447180147902774969[263] = 1.0;
   out_6447180147902774969[264] = 0;
   out_6447180147902774969[265] = 0;
   out_6447180147902774969[266] = 0;
   out_6447180147902774969[267] = 0;
   out_6447180147902774969[268] = 0;
   out_6447180147902774969[269] = 0;
   out_6447180147902774969[270] = 0;
   out_6447180147902774969[271] = 0;
   out_6447180147902774969[272] = 0;
   out_6447180147902774969[273] = 0;
   out_6447180147902774969[274] = 0;
   out_6447180147902774969[275] = 0;
   out_6447180147902774969[276] = 0;
   out_6447180147902774969[277] = 0;
   out_6447180147902774969[278] = 0;
   out_6447180147902774969[279] = 0;
   out_6447180147902774969[280] = 0;
   out_6447180147902774969[281] = 0;
   out_6447180147902774969[282] = 0;
   out_6447180147902774969[283] = 0;
   out_6447180147902774969[284] = 0;
   out_6447180147902774969[285] = 1.0;
   out_6447180147902774969[286] = 0;
   out_6447180147902774969[287] = 0;
   out_6447180147902774969[288] = 0;
   out_6447180147902774969[289] = 0;
   out_6447180147902774969[290] = 0;
   out_6447180147902774969[291] = 0;
   out_6447180147902774969[292] = 0;
   out_6447180147902774969[293] = 0;
   out_6447180147902774969[294] = 0;
   out_6447180147902774969[295] = 0;
   out_6447180147902774969[296] = 0;
   out_6447180147902774969[297] = 0;
   out_6447180147902774969[298] = 0;
   out_6447180147902774969[299] = 0;
   out_6447180147902774969[300] = 0;
   out_6447180147902774969[301] = 0;
   out_6447180147902774969[302] = 0;
   out_6447180147902774969[303] = 0;
   out_6447180147902774969[304] = 0;
   out_6447180147902774969[305] = 0;
   out_6447180147902774969[306] = 0;
   out_6447180147902774969[307] = 1.0;
   out_6447180147902774969[308] = 0;
   out_6447180147902774969[309] = 0;
   out_6447180147902774969[310] = 0;
   out_6447180147902774969[311] = 0;
   out_6447180147902774969[312] = 0;
   out_6447180147902774969[313] = 0;
   out_6447180147902774969[314] = 0;
   out_6447180147902774969[315] = 0;
   out_6447180147902774969[316] = 0;
   out_6447180147902774969[317] = 0;
   out_6447180147902774969[318] = 0;
   out_6447180147902774969[319] = 0;
   out_6447180147902774969[320] = 0;
   out_6447180147902774969[321] = 0;
   out_6447180147902774969[322] = 0;
   out_6447180147902774969[323] = 0;
   out_6447180147902774969[324] = 0;
   out_6447180147902774969[325] = 0;
   out_6447180147902774969[326] = 0;
   out_6447180147902774969[327] = 0;
   out_6447180147902774969[328] = 0;
   out_6447180147902774969[329] = 1.0;
   out_6447180147902774969[330] = 0;
   out_6447180147902774969[331] = 0;
   out_6447180147902774969[332] = 0;
   out_6447180147902774969[333] = 0;
   out_6447180147902774969[334] = 0;
   out_6447180147902774969[335] = 0;
   out_6447180147902774969[336] = 0;
   out_6447180147902774969[337] = 0;
   out_6447180147902774969[338] = 0;
   out_6447180147902774969[339] = 0;
   out_6447180147902774969[340] = 0;
   out_6447180147902774969[341] = 0;
   out_6447180147902774969[342] = 0;
   out_6447180147902774969[343] = 0;
   out_6447180147902774969[344] = 0;
   out_6447180147902774969[345] = 0;
   out_6447180147902774969[346] = 0;
   out_6447180147902774969[347] = 0;
   out_6447180147902774969[348] = 0;
   out_6447180147902774969[349] = 0;
   out_6447180147902774969[350] = 0;
   out_6447180147902774969[351] = 1.0;
   out_6447180147902774969[352] = 0;
   out_6447180147902774969[353] = 0;
   out_6447180147902774969[354] = 0;
   out_6447180147902774969[355] = 0;
   out_6447180147902774969[356] = 0;
   out_6447180147902774969[357] = 0;
   out_6447180147902774969[358] = 0;
   out_6447180147902774969[359] = 0;
   out_6447180147902774969[360] = 0;
   out_6447180147902774969[361] = 0;
   out_6447180147902774969[362] = 0;
   out_6447180147902774969[363] = 0;
   out_6447180147902774969[364] = 0;
   out_6447180147902774969[365] = 0;
   out_6447180147902774969[366] = 0;
   out_6447180147902774969[367] = 0;
   out_6447180147902774969[368] = 0;
   out_6447180147902774969[369] = 0;
   out_6447180147902774969[370] = 0;
   out_6447180147902774969[371] = 0;
   out_6447180147902774969[372] = 0;
   out_6447180147902774969[373] = 1.0;
   out_6447180147902774969[374] = 0;
   out_6447180147902774969[375] = 0;
   out_6447180147902774969[376] = 0;
   out_6447180147902774969[377] = 0;
   out_6447180147902774969[378] = 0;
   out_6447180147902774969[379] = 0;
   out_6447180147902774969[380] = 0;
   out_6447180147902774969[381] = 0;
   out_6447180147902774969[382] = 0;
   out_6447180147902774969[383] = 0;
   out_6447180147902774969[384] = 0;
   out_6447180147902774969[385] = 0;
   out_6447180147902774969[386] = 0;
   out_6447180147902774969[387] = 0;
   out_6447180147902774969[388] = 0;
   out_6447180147902774969[389] = 0;
   out_6447180147902774969[390] = 0;
   out_6447180147902774969[391] = 0;
   out_6447180147902774969[392] = 0;
   out_6447180147902774969[393] = 0;
   out_6447180147902774969[394] = 0;
   out_6447180147902774969[395] = 1.0;
   out_6447180147902774969[396] = 0;
   out_6447180147902774969[397] = 0;
   out_6447180147902774969[398] = 0;
   out_6447180147902774969[399] = 0;
   out_6447180147902774969[400] = 0;
   out_6447180147902774969[401] = 0;
   out_6447180147902774969[402] = 0;
   out_6447180147902774969[403] = 0;
   out_6447180147902774969[404] = 0;
   out_6447180147902774969[405] = 0;
   out_6447180147902774969[406] = 0;
   out_6447180147902774969[407] = 0;
   out_6447180147902774969[408] = 0;
   out_6447180147902774969[409] = 0;
   out_6447180147902774969[410] = 0;
   out_6447180147902774969[411] = 0;
   out_6447180147902774969[412] = 0;
   out_6447180147902774969[413] = 0;
   out_6447180147902774969[414] = 0;
   out_6447180147902774969[415] = 0;
   out_6447180147902774969[416] = 0;
   out_6447180147902774969[417] = 1.0;
   out_6447180147902774969[418] = 0;
   out_6447180147902774969[419] = 0;
   out_6447180147902774969[420] = 0;
   out_6447180147902774969[421] = 0;
   out_6447180147902774969[422] = 0;
   out_6447180147902774969[423] = 0;
   out_6447180147902774969[424] = 0;
   out_6447180147902774969[425] = 0;
   out_6447180147902774969[426] = 0;
   out_6447180147902774969[427] = 0;
   out_6447180147902774969[428] = 0;
   out_6447180147902774969[429] = 0;
   out_6447180147902774969[430] = 0;
   out_6447180147902774969[431] = 0;
   out_6447180147902774969[432] = 0;
   out_6447180147902774969[433] = 0;
   out_6447180147902774969[434] = 0;
   out_6447180147902774969[435] = 0;
   out_6447180147902774969[436] = 0;
   out_6447180147902774969[437] = 0;
   out_6447180147902774969[438] = 0;
   out_6447180147902774969[439] = 1.0;
   out_6447180147902774969[440] = 0;
   out_6447180147902774969[441] = 0;
   out_6447180147902774969[442] = 0;
   out_6447180147902774969[443] = 0;
   out_6447180147902774969[444] = 0;
   out_6447180147902774969[445] = 0;
   out_6447180147902774969[446] = 0;
   out_6447180147902774969[447] = 0;
   out_6447180147902774969[448] = 0;
   out_6447180147902774969[449] = 0;
   out_6447180147902774969[450] = 0;
   out_6447180147902774969[451] = 0;
   out_6447180147902774969[452] = 0;
   out_6447180147902774969[453] = 0;
   out_6447180147902774969[454] = 0;
   out_6447180147902774969[455] = 0;
   out_6447180147902774969[456] = 0;
   out_6447180147902774969[457] = 0;
   out_6447180147902774969[458] = 0;
   out_6447180147902774969[459] = 0;
   out_6447180147902774969[460] = 0;
   out_6447180147902774969[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_579222733045003540) {
   out_579222733045003540[0] = dt*state[7] + state[0];
   out_579222733045003540[1] = dt*state[8] + state[1];
   out_579222733045003540[2] = dt*state[9] + state[2];
   out_579222733045003540[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_579222733045003540[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_579222733045003540[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_579222733045003540[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_579222733045003540[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_579222733045003540[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_579222733045003540[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_579222733045003540[10] = state[10];
   out_579222733045003540[11] = state[11];
   out_579222733045003540[12] = state[12];
   out_579222733045003540[13] = state[13];
   out_579222733045003540[14] = state[14];
   out_579222733045003540[15] = state[15];
   out_579222733045003540[16] = state[16];
   out_579222733045003540[17] = state[17];
   out_579222733045003540[18] = state[18];
   out_579222733045003540[19] = state[19];
   out_579222733045003540[20] = state[20];
   out_579222733045003540[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4660468052446174995) {
   out_4660468052446174995[0] = 1;
   out_4660468052446174995[1] = 0;
   out_4660468052446174995[2] = 0;
   out_4660468052446174995[3] = 0;
   out_4660468052446174995[4] = 0;
   out_4660468052446174995[5] = 0;
   out_4660468052446174995[6] = dt;
   out_4660468052446174995[7] = 0;
   out_4660468052446174995[8] = 0;
   out_4660468052446174995[9] = 0;
   out_4660468052446174995[10] = 0;
   out_4660468052446174995[11] = 0;
   out_4660468052446174995[12] = 0;
   out_4660468052446174995[13] = 0;
   out_4660468052446174995[14] = 0;
   out_4660468052446174995[15] = 0;
   out_4660468052446174995[16] = 0;
   out_4660468052446174995[17] = 0;
   out_4660468052446174995[18] = 0;
   out_4660468052446174995[19] = 0;
   out_4660468052446174995[20] = 0;
   out_4660468052446174995[21] = 0;
   out_4660468052446174995[22] = 1;
   out_4660468052446174995[23] = 0;
   out_4660468052446174995[24] = 0;
   out_4660468052446174995[25] = 0;
   out_4660468052446174995[26] = 0;
   out_4660468052446174995[27] = 0;
   out_4660468052446174995[28] = dt;
   out_4660468052446174995[29] = 0;
   out_4660468052446174995[30] = 0;
   out_4660468052446174995[31] = 0;
   out_4660468052446174995[32] = 0;
   out_4660468052446174995[33] = 0;
   out_4660468052446174995[34] = 0;
   out_4660468052446174995[35] = 0;
   out_4660468052446174995[36] = 0;
   out_4660468052446174995[37] = 0;
   out_4660468052446174995[38] = 0;
   out_4660468052446174995[39] = 0;
   out_4660468052446174995[40] = 0;
   out_4660468052446174995[41] = 0;
   out_4660468052446174995[42] = 0;
   out_4660468052446174995[43] = 0;
   out_4660468052446174995[44] = 1;
   out_4660468052446174995[45] = 0;
   out_4660468052446174995[46] = 0;
   out_4660468052446174995[47] = 0;
   out_4660468052446174995[48] = 0;
   out_4660468052446174995[49] = 0;
   out_4660468052446174995[50] = dt;
   out_4660468052446174995[51] = 0;
   out_4660468052446174995[52] = 0;
   out_4660468052446174995[53] = 0;
   out_4660468052446174995[54] = 0;
   out_4660468052446174995[55] = 0;
   out_4660468052446174995[56] = 0;
   out_4660468052446174995[57] = 0;
   out_4660468052446174995[58] = 0;
   out_4660468052446174995[59] = 0;
   out_4660468052446174995[60] = 0;
   out_4660468052446174995[61] = 0;
   out_4660468052446174995[62] = 0;
   out_4660468052446174995[63] = 0;
   out_4660468052446174995[64] = 0;
   out_4660468052446174995[65] = 0;
   out_4660468052446174995[66] = 1;
   out_4660468052446174995[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4660468052446174995[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4660468052446174995[69] = 0;
   out_4660468052446174995[70] = 0;
   out_4660468052446174995[71] = 0;
   out_4660468052446174995[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4660468052446174995[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4660468052446174995[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4660468052446174995[75] = 0;
   out_4660468052446174995[76] = 0;
   out_4660468052446174995[77] = 0;
   out_4660468052446174995[78] = 0;
   out_4660468052446174995[79] = 0;
   out_4660468052446174995[80] = 0;
   out_4660468052446174995[81] = 0;
   out_4660468052446174995[82] = 0;
   out_4660468052446174995[83] = 0;
   out_4660468052446174995[84] = 0;
   out_4660468052446174995[85] = 0;
   out_4660468052446174995[86] = 0;
   out_4660468052446174995[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4660468052446174995[88] = 1;
   out_4660468052446174995[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4660468052446174995[90] = 0;
   out_4660468052446174995[91] = 0;
   out_4660468052446174995[92] = 0;
   out_4660468052446174995[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4660468052446174995[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4660468052446174995[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4660468052446174995[96] = 0;
   out_4660468052446174995[97] = 0;
   out_4660468052446174995[98] = 0;
   out_4660468052446174995[99] = 0;
   out_4660468052446174995[100] = 0;
   out_4660468052446174995[101] = 0;
   out_4660468052446174995[102] = 0;
   out_4660468052446174995[103] = 0;
   out_4660468052446174995[104] = 0;
   out_4660468052446174995[105] = 0;
   out_4660468052446174995[106] = 0;
   out_4660468052446174995[107] = 0;
   out_4660468052446174995[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4660468052446174995[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4660468052446174995[110] = 1;
   out_4660468052446174995[111] = 0;
   out_4660468052446174995[112] = 0;
   out_4660468052446174995[113] = 0;
   out_4660468052446174995[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4660468052446174995[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4660468052446174995[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4660468052446174995[117] = 0;
   out_4660468052446174995[118] = 0;
   out_4660468052446174995[119] = 0;
   out_4660468052446174995[120] = 0;
   out_4660468052446174995[121] = 0;
   out_4660468052446174995[122] = 0;
   out_4660468052446174995[123] = 0;
   out_4660468052446174995[124] = 0;
   out_4660468052446174995[125] = 0;
   out_4660468052446174995[126] = 0;
   out_4660468052446174995[127] = 0;
   out_4660468052446174995[128] = 0;
   out_4660468052446174995[129] = 0;
   out_4660468052446174995[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4660468052446174995[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4660468052446174995[132] = 1;
   out_4660468052446174995[133] = 0;
   out_4660468052446174995[134] = 0;
   out_4660468052446174995[135] = 0;
   out_4660468052446174995[136] = 0;
   out_4660468052446174995[137] = 0;
   out_4660468052446174995[138] = 0;
   out_4660468052446174995[139] = 0;
   out_4660468052446174995[140] = 0;
   out_4660468052446174995[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4660468052446174995[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4660468052446174995[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4660468052446174995[144] = 0;
   out_4660468052446174995[145] = 0;
   out_4660468052446174995[146] = 0;
   out_4660468052446174995[147] = 0;
   out_4660468052446174995[148] = 0;
   out_4660468052446174995[149] = 0;
   out_4660468052446174995[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4660468052446174995[151] = 0;
   out_4660468052446174995[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4660468052446174995[153] = 0;
   out_4660468052446174995[154] = 1;
   out_4660468052446174995[155] = 0;
   out_4660468052446174995[156] = 0;
   out_4660468052446174995[157] = 0;
   out_4660468052446174995[158] = 0;
   out_4660468052446174995[159] = 0;
   out_4660468052446174995[160] = 0;
   out_4660468052446174995[161] = 0;
   out_4660468052446174995[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4660468052446174995[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4660468052446174995[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4660468052446174995[165] = 0;
   out_4660468052446174995[166] = 0;
   out_4660468052446174995[167] = 0;
   out_4660468052446174995[168] = 0;
   out_4660468052446174995[169] = 0;
   out_4660468052446174995[170] = 0;
   out_4660468052446174995[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4660468052446174995[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4660468052446174995[173] = 0;
   out_4660468052446174995[174] = 0;
   out_4660468052446174995[175] = 0;
   out_4660468052446174995[176] = 1;
   out_4660468052446174995[177] = 0;
   out_4660468052446174995[178] = 0;
   out_4660468052446174995[179] = 0;
   out_4660468052446174995[180] = 0;
   out_4660468052446174995[181] = 0;
   out_4660468052446174995[182] = 0;
   out_4660468052446174995[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4660468052446174995[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4660468052446174995[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4660468052446174995[186] = 0;
   out_4660468052446174995[187] = 0;
   out_4660468052446174995[188] = 0;
   out_4660468052446174995[189] = 0;
   out_4660468052446174995[190] = 0;
   out_4660468052446174995[191] = 0;
   out_4660468052446174995[192] = 0;
   out_4660468052446174995[193] = 0;
   out_4660468052446174995[194] = 0;
   out_4660468052446174995[195] = 0;
   out_4660468052446174995[196] = 0;
   out_4660468052446174995[197] = 0;
   out_4660468052446174995[198] = 1;
   out_4660468052446174995[199] = 0;
   out_4660468052446174995[200] = 0;
   out_4660468052446174995[201] = 0;
   out_4660468052446174995[202] = 0;
   out_4660468052446174995[203] = 0;
   out_4660468052446174995[204] = 0;
   out_4660468052446174995[205] = 0;
   out_4660468052446174995[206] = 0;
   out_4660468052446174995[207] = 0;
   out_4660468052446174995[208] = 0;
   out_4660468052446174995[209] = 0;
   out_4660468052446174995[210] = 0;
   out_4660468052446174995[211] = 0;
   out_4660468052446174995[212] = 0;
   out_4660468052446174995[213] = 0;
   out_4660468052446174995[214] = 0;
   out_4660468052446174995[215] = 0;
   out_4660468052446174995[216] = 0;
   out_4660468052446174995[217] = 0;
   out_4660468052446174995[218] = 0;
   out_4660468052446174995[219] = 0;
   out_4660468052446174995[220] = 1;
   out_4660468052446174995[221] = 0;
   out_4660468052446174995[222] = 0;
   out_4660468052446174995[223] = 0;
   out_4660468052446174995[224] = 0;
   out_4660468052446174995[225] = 0;
   out_4660468052446174995[226] = 0;
   out_4660468052446174995[227] = 0;
   out_4660468052446174995[228] = 0;
   out_4660468052446174995[229] = 0;
   out_4660468052446174995[230] = 0;
   out_4660468052446174995[231] = 0;
   out_4660468052446174995[232] = 0;
   out_4660468052446174995[233] = 0;
   out_4660468052446174995[234] = 0;
   out_4660468052446174995[235] = 0;
   out_4660468052446174995[236] = 0;
   out_4660468052446174995[237] = 0;
   out_4660468052446174995[238] = 0;
   out_4660468052446174995[239] = 0;
   out_4660468052446174995[240] = 0;
   out_4660468052446174995[241] = 0;
   out_4660468052446174995[242] = 1;
   out_4660468052446174995[243] = 0;
   out_4660468052446174995[244] = 0;
   out_4660468052446174995[245] = 0;
   out_4660468052446174995[246] = 0;
   out_4660468052446174995[247] = 0;
   out_4660468052446174995[248] = 0;
   out_4660468052446174995[249] = 0;
   out_4660468052446174995[250] = 0;
   out_4660468052446174995[251] = 0;
   out_4660468052446174995[252] = 0;
   out_4660468052446174995[253] = 0;
   out_4660468052446174995[254] = 0;
   out_4660468052446174995[255] = 0;
   out_4660468052446174995[256] = 0;
   out_4660468052446174995[257] = 0;
   out_4660468052446174995[258] = 0;
   out_4660468052446174995[259] = 0;
   out_4660468052446174995[260] = 0;
   out_4660468052446174995[261] = 0;
   out_4660468052446174995[262] = 0;
   out_4660468052446174995[263] = 0;
   out_4660468052446174995[264] = 1;
   out_4660468052446174995[265] = 0;
   out_4660468052446174995[266] = 0;
   out_4660468052446174995[267] = 0;
   out_4660468052446174995[268] = 0;
   out_4660468052446174995[269] = 0;
   out_4660468052446174995[270] = 0;
   out_4660468052446174995[271] = 0;
   out_4660468052446174995[272] = 0;
   out_4660468052446174995[273] = 0;
   out_4660468052446174995[274] = 0;
   out_4660468052446174995[275] = 0;
   out_4660468052446174995[276] = 0;
   out_4660468052446174995[277] = 0;
   out_4660468052446174995[278] = 0;
   out_4660468052446174995[279] = 0;
   out_4660468052446174995[280] = 0;
   out_4660468052446174995[281] = 0;
   out_4660468052446174995[282] = 0;
   out_4660468052446174995[283] = 0;
   out_4660468052446174995[284] = 0;
   out_4660468052446174995[285] = 0;
   out_4660468052446174995[286] = 1;
   out_4660468052446174995[287] = 0;
   out_4660468052446174995[288] = 0;
   out_4660468052446174995[289] = 0;
   out_4660468052446174995[290] = 0;
   out_4660468052446174995[291] = 0;
   out_4660468052446174995[292] = 0;
   out_4660468052446174995[293] = 0;
   out_4660468052446174995[294] = 0;
   out_4660468052446174995[295] = 0;
   out_4660468052446174995[296] = 0;
   out_4660468052446174995[297] = 0;
   out_4660468052446174995[298] = 0;
   out_4660468052446174995[299] = 0;
   out_4660468052446174995[300] = 0;
   out_4660468052446174995[301] = 0;
   out_4660468052446174995[302] = 0;
   out_4660468052446174995[303] = 0;
   out_4660468052446174995[304] = 0;
   out_4660468052446174995[305] = 0;
   out_4660468052446174995[306] = 0;
   out_4660468052446174995[307] = 0;
   out_4660468052446174995[308] = 1;
   out_4660468052446174995[309] = 0;
   out_4660468052446174995[310] = 0;
   out_4660468052446174995[311] = 0;
   out_4660468052446174995[312] = 0;
   out_4660468052446174995[313] = 0;
   out_4660468052446174995[314] = 0;
   out_4660468052446174995[315] = 0;
   out_4660468052446174995[316] = 0;
   out_4660468052446174995[317] = 0;
   out_4660468052446174995[318] = 0;
   out_4660468052446174995[319] = 0;
   out_4660468052446174995[320] = 0;
   out_4660468052446174995[321] = 0;
   out_4660468052446174995[322] = 0;
   out_4660468052446174995[323] = 0;
   out_4660468052446174995[324] = 0;
   out_4660468052446174995[325] = 0;
   out_4660468052446174995[326] = 0;
   out_4660468052446174995[327] = 0;
   out_4660468052446174995[328] = 0;
   out_4660468052446174995[329] = 0;
   out_4660468052446174995[330] = 1;
   out_4660468052446174995[331] = 0;
   out_4660468052446174995[332] = 0;
   out_4660468052446174995[333] = 0;
   out_4660468052446174995[334] = 0;
   out_4660468052446174995[335] = 0;
   out_4660468052446174995[336] = 0;
   out_4660468052446174995[337] = 0;
   out_4660468052446174995[338] = 0;
   out_4660468052446174995[339] = 0;
   out_4660468052446174995[340] = 0;
   out_4660468052446174995[341] = 0;
   out_4660468052446174995[342] = 0;
   out_4660468052446174995[343] = 0;
   out_4660468052446174995[344] = 0;
   out_4660468052446174995[345] = 0;
   out_4660468052446174995[346] = 0;
   out_4660468052446174995[347] = 0;
   out_4660468052446174995[348] = 0;
   out_4660468052446174995[349] = 0;
   out_4660468052446174995[350] = 0;
   out_4660468052446174995[351] = 0;
   out_4660468052446174995[352] = 1;
   out_4660468052446174995[353] = 0;
   out_4660468052446174995[354] = 0;
   out_4660468052446174995[355] = 0;
   out_4660468052446174995[356] = 0;
   out_4660468052446174995[357] = 0;
   out_4660468052446174995[358] = 0;
   out_4660468052446174995[359] = 0;
   out_4660468052446174995[360] = 0;
   out_4660468052446174995[361] = 0;
   out_4660468052446174995[362] = 0;
   out_4660468052446174995[363] = 0;
   out_4660468052446174995[364] = 0;
   out_4660468052446174995[365] = 0;
   out_4660468052446174995[366] = 0;
   out_4660468052446174995[367] = 0;
   out_4660468052446174995[368] = 0;
   out_4660468052446174995[369] = 0;
   out_4660468052446174995[370] = 0;
   out_4660468052446174995[371] = 0;
   out_4660468052446174995[372] = 0;
   out_4660468052446174995[373] = 0;
   out_4660468052446174995[374] = 1;
   out_4660468052446174995[375] = 0;
   out_4660468052446174995[376] = 0;
   out_4660468052446174995[377] = 0;
   out_4660468052446174995[378] = 0;
   out_4660468052446174995[379] = 0;
   out_4660468052446174995[380] = 0;
   out_4660468052446174995[381] = 0;
   out_4660468052446174995[382] = 0;
   out_4660468052446174995[383] = 0;
   out_4660468052446174995[384] = 0;
   out_4660468052446174995[385] = 0;
   out_4660468052446174995[386] = 0;
   out_4660468052446174995[387] = 0;
   out_4660468052446174995[388] = 0;
   out_4660468052446174995[389] = 0;
   out_4660468052446174995[390] = 0;
   out_4660468052446174995[391] = 0;
   out_4660468052446174995[392] = 0;
   out_4660468052446174995[393] = 0;
   out_4660468052446174995[394] = 0;
   out_4660468052446174995[395] = 0;
   out_4660468052446174995[396] = 1;
   out_4660468052446174995[397] = 0;
   out_4660468052446174995[398] = 0;
   out_4660468052446174995[399] = 0;
   out_4660468052446174995[400] = 0;
   out_4660468052446174995[401] = 0;
   out_4660468052446174995[402] = 0;
   out_4660468052446174995[403] = 0;
   out_4660468052446174995[404] = 0;
   out_4660468052446174995[405] = 0;
   out_4660468052446174995[406] = 0;
   out_4660468052446174995[407] = 0;
   out_4660468052446174995[408] = 0;
   out_4660468052446174995[409] = 0;
   out_4660468052446174995[410] = 0;
   out_4660468052446174995[411] = 0;
   out_4660468052446174995[412] = 0;
   out_4660468052446174995[413] = 0;
   out_4660468052446174995[414] = 0;
   out_4660468052446174995[415] = 0;
   out_4660468052446174995[416] = 0;
   out_4660468052446174995[417] = 0;
   out_4660468052446174995[418] = 1;
   out_4660468052446174995[419] = 0;
   out_4660468052446174995[420] = 0;
   out_4660468052446174995[421] = 0;
   out_4660468052446174995[422] = 0;
   out_4660468052446174995[423] = 0;
   out_4660468052446174995[424] = 0;
   out_4660468052446174995[425] = 0;
   out_4660468052446174995[426] = 0;
   out_4660468052446174995[427] = 0;
   out_4660468052446174995[428] = 0;
   out_4660468052446174995[429] = 0;
   out_4660468052446174995[430] = 0;
   out_4660468052446174995[431] = 0;
   out_4660468052446174995[432] = 0;
   out_4660468052446174995[433] = 0;
   out_4660468052446174995[434] = 0;
   out_4660468052446174995[435] = 0;
   out_4660468052446174995[436] = 0;
   out_4660468052446174995[437] = 0;
   out_4660468052446174995[438] = 0;
   out_4660468052446174995[439] = 0;
   out_4660468052446174995[440] = 1;
}
void h_4(double *state, double *unused, double *out_9009797269586341661) {
   out_9009797269586341661[0] = state[10] + state[13];
   out_9009797269586341661[1] = state[11] + state[14];
   out_9009797269586341661[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_815784388892164470) {
   out_815784388892164470[0] = 0;
   out_815784388892164470[1] = 0;
   out_815784388892164470[2] = 0;
   out_815784388892164470[3] = 0;
   out_815784388892164470[4] = 0;
   out_815784388892164470[5] = 0;
   out_815784388892164470[6] = 0;
   out_815784388892164470[7] = 0;
   out_815784388892164470[8] = 0;
   out_815784388892164470[9] = 0;
   out_815784388892164470[10] = 1;
   out_815784388892164470[11] = 0;
   out_815784388892164470[12] = 0;
   out_815784388892164470[13] = 1;
   out_815784388892164470[14] = 0;
   out_815784388892164470[15] = 0;
   out_815784388892164470[16] = 0;
   out_815784388892164470[17] = 0;
   out_815784388892164470[18] = 0;
   out_815784388892164470[19] = 0;
   out_815784388892164470[20] = 0;
   out_815784388892164470[21] = 0;
   out_815784388892164470[22] = 0;
   out_815784388892164470[23] = 0;
   out_815784388892164470[24] = 0;
   out_815784388892164470[25] = 0;
   out_815784388892164470[26] = 0;
   out_815784388892164470[27] = 0;
   out_815784388892164470[28] = 0;
   out_815784388892164470[29] = 0;
   out_815784388892164470[30] = 0;
   out_815784388892164470[31] = 0;
   out_815784388892164470[32] = 0;
   out_815784388892164470[33] = 1;
   out_815784388892164470[34] = 0;
   out_815784388892164470[35] = 0;
   out_815784388892164470[36] = 1;
   out_815784388892164470[37] = 0;
   out_815784388892164470[38] = 0;
   out_815784388892164470[39] = 0;
   out_815784388892164470[40] = 0;
   out_815784388892164470[41] = 0;
   out_815784388892164470[42] = 0;
   out_815784388892164470[43] = 0;
   out_815784388892164470[44] = 0;
   out_815784388892164470[45] = 0;
   out_815784388892164470[46] = 0;
   out_815784388892164470[47] = 0;
   out_815784388892164470[48] = 0;
   out_815784388892164470[49] = 0;
   out_815784388892164470[50] = 0;
   out_815784388892164470[51] = 0;
   out_815784388892164470[52] = 0;
   out_815784388892164470[53] = 0;
   out_815784388892164470[54] = 0;
   out_815784388892164470[55] = 0;
   out_815784388892164470[56] = 1;
   out_815784388892164470[57] = 0;
   out_815784388892164470[58] = 0;
   out_815784388892164470[59] = 1;
   out_815784388892164470[60] = 0;
   out_815784388892164470[61] = 0;
   out_815784388892164470[62] = 0;
   out_815784388892164470[63] = 0;
   out_815784388892164470[64] = 0;
   out_815784388892164470[65] = 0;
}
void h_9(double *state, double *unused, double *out_7967825371321883915) {
   out_7967825371321883915[0] = state[10];
   out_7967825371321883915[1] = state[11];
   out_7967825371321883915[2] = state[12];
}
void H_9(double *state, double *unused, double *out_8103003324156611940) {
   out_8103003324156611940[0] = 0;
   out_8103003324156611940[1] = 0;
   out_8103003324156611940[2] = 0;
   out_8103003324156611940[3] = 0;
   out_8103003324156611940[4] = 0;
   out_8103003324156611940[5] = 0;
   out_8103003324156611940[6] = 0;
   out_8103003324156611940[7] = 0;
   out_8103003324156611940[8] = 0;
   out_8103003324156611940[9] = 0;
   out_8103003324156611940[10] = 1;
   out_8103003324156611940[11] = 0;
   out_8103003324156611940[12] = 0;
   out_8103003324156611940[13] = 0;
   out_8103003324156611940[14] = 0;
   out_8103003324156611940[15] = 0;
   out_8103003324156611940[16] = 0;
   out_8103003324156611940[17] = 0;
   out_8103003324156611940[18] = 0;
   out_8103003324156611940[19] = 0;
   out_8103003324156611940[20] = 0;
   out_8103003324156611940[21] = 0;
   out_8103003324156611940[22] = 0;
   out_8103003324156611940[23] = 0;
   out_8103003324156611940[24] = 0;
   out_8103003324156611940[25] = 0;
   out_8103003324156611940[26] = 0;
   out_8103003324156611940[27] = 0;
   out_8103003324156611940[28] = 0;
   out_8103003324156611940[29] = 0;
   out_8103003324156611940[30] = 0;
   out_8103003324156611940[31] = 0;
   out_8103003324156611940[32] = 0;
   out_8103003324156611940[33] = 1;
   out_8103003324156611940[34] = 0;
   out_8103003324156611940[35] = 0;
   out_8103003324156611940[36] = 0;
   out_8103003324156611940[37] = 0;
   out_8103003324156611940[38] = 0;
   out_8103003324156611940[39] = 0;
   out_8103003324156611940[40] = 0;
   out_8103003324156611940[41] = 0;
   out_8103003324156611940[42] = 0;
   out_8103003324156611940[43] = 0;
   out_8103003324156611940[44] = 0;
   out_8103003324156611940[45] = 0;
   out_8103003324156611940[46] = 0;
   out_8103003324156611940[47] = 0;
   out_8103003324156611940[48] = 0;
   out_8103003324156611940[49] = 0;
   out_8103003324156611940[50] = 0;
   out_8103003324156611940[51] = 0;
   out_8103003324156611940[52] = 0;
   out_8103003324156611940[53] = 0;
   out_8103003324156611940[54] = 0;
   out_8103003324156611940[55] = 0;
   out_8103003324156611940[56] = 1;
   out_8103003324156611940[57] = 0;
   out_8103003324156611940[58] = 0;
   out_8103003324156611940[59] = 0;
   out_8103003324156611940[60] = 0;
   out_8103003324156611940[61] = 0;
   out_8103003324156611940[62] = 0;
   out_8103003324156611940[63] = 0;
   out_8103003324156611940[64] = 0;
   out_8103003324156611940[65] = 0;
}
void h_10(double *state, double *unused, double *out_719177485573458568) {
   out_719177485573458568[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_719177485573458568[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_719177485573458568[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5055567580639733571) {
   out_5055567580639733571[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5055567580639733571[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5055567580639733571[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5055567580639733571[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5055567580639733571[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5055567580639733571[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5055567580639733571[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5055567580639733571[7] = 0;
   out_5055567580639733571[8] = 0;
   out_5055567580639733571[9] = 0;
   out_5055567580639733571[10] = 0;
   out_5055567580639733571[11] = 0;
   out_5055567580639733571[12] = 0;
   out_5055567580639733571[13] = 0;
   out_5055567580639733571[14] = 0;
   out_5055567580639733571[15] = 0;
   out_5055567580639733571[16] = 1;
   out_5055567580639733571[17] = 0;
   out_5055567580639733571[18] = 0;
   out_5055567580639733571[19] = 1;
   out_5055567580639733571[20] = 0;
   out_5055567580639733571[21] = 0;
   out_5055567580639733571[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5055567580639733571[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5055567580639733571[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5055567580639733571[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5055567580639733571[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5055567580639733571[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5055567580639733571[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5055567580639733571[29] = 0;
   out_5055567580639733571[30] = 0;
   out_5055567580639733571[31] = 0;
   out_5055567580639733571[32] = 0;
   out_5055567580639733571[33] = 0;
   out_5055567580639733571[34] = 0;
   out_5055567580639733571[35] = 0;
   out_5055567580639733571[36] = 0;
   out_5055567580639733571[37] = 0;
   out_5055567580639733571[38] = 0;
   out_5055567580639733571[39] = 1;
   out_5055567580639733571[40] = 0;
   out_5055567580639733571[41] = 0;
   out_5055567580639733571[42] = 1;
   out_5055567580639733571[43] = 0;
   out_5055567580639733571[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5055567580639733571[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5055567580639733571[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5055567580639733571[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5055567580639733571[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5055567580639733571[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5055567580639733571[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5055567580639733571[51] = 0;
   out_5055567580639733571[52] = 0;
   out_5055567580639733571[53] = 0;
   out_5055567580639733571[54] = 0;
   out_5055567580639733571[55] = 0;
   out_5055567580639733571[56] = 0;
   out_5055567580639733571[57] = 0;
   out_5055567580639733571[58] = 0;
   out_5055567580639733571[59] = 0;
   out_5055567580639733571[60] = 0;
   out_5055567580639733571[61] = 0;
   out_5055567580639733571[62] = 1;
   out_5055567580639733571[63] = 0;
   out_5055567580639733571[64] = 0;
   out_5055567580639733571[65] = 1;
}
void h_12(double *state, double *unused, double *out_4435673340096716254) {
   out_4435673340096716254[0] = state[0];
   out_4435673340096716254[1] = state[1];
   out_4435673340096716254[2] = state[2];
}
void H_12(double *state, double *unused, double *out_5835240796924126265) {
   out_5835240796924126265[0] = 1;
   out_5835240796924126265[1] = 0;
   out_5835240796924126265[2] = 0;
   out_5835240796924126265[3] = 0;
   out_5835240796924126265[4] = 0;
   out_5835240796924126265[5] = 0;
   out_5835240796924126265[6] = 0;
   out_5835240796924126265[7] = 0;
   out_5835240796924126265[8] = 0;
   out_5835240796924126265[9] = 0;
   out_5835240796924126265[10] = 0;
   out_5835240796924126265[11] = 0;
   out_5835240796924126265[12] = 0;
   out_5835240796924126265[13] = 0;
   out_5835240796924126265[14] = 0;
   out_5835240796924126265[15] = 0;
   out_5835240796924126265[16] = 0;
   out_5835240796924126265[17] = 0;
   out_5835240796924126265[18] = 0;
   out_5835240796924126265[19] = 0;
   out_5835240796924126265[20] = 0;
   out_5835240796924126265[21] = 0;
   out_5835240796924126265[22] = 0;
   out_5835240796924126265[23] = 1;
   out_5835240796924126265[24] = 0;
   out_5835240796924126265[25] = 0;
   out_5835240796924126265[26] = 0;
   out_5835240796924126265[27] = 0;
   out_5835240796924126265[28] = 0;
   out_5835240796924126265[29] = 0;
   out_5835240796924126265[30] = 0;
   out_5835240796924126265[31] = 0;
   out_5835240796924126265[32] = 0;
   out_5835240796924126265[33] = 0;
   out_5835240796924126265[34] = 0;
   out_5835240796924126265[35] = 0;
   out_5835240796924126265[36] = 0;
   out_5835240796924126265[37] = 0;
   out_5835240796924126265[38] = 0;
   out_5835240796924126265[39] = 0;
   out_5835240796924126265[40] = 0;
   out_5835240796924126265[41] = 0;
   out_5835240796924126265[42] = 0;
   out_5835240796924126265[43] = 0;
   out_5835240796924126265[44] = 0;
   out_5835240796924126265[45] = 0;
   out_5835240796924126265[46] = 1;
   out_5835240796924126265[47] = 0;
   out_5835240796924126265[48] = 0;
   out_5835240796924126265[49] = 0;
   out_5835240796924126265[50] = 0;
   out_5835240796924126265[51] = 0;
   out_5835240796924126265[52] = 0;
   out_5835240796924126265[53] = 0;
   out_5835240796924126265[54] = 0;
   out_5835240796924126265[55] = 0;
   out_5835240796924126265[56] = 0;
   out_5835240796924126265[57] = 0;
   out_5835240796924126265[58] = 0;
   out_5835240796924126265[59] = 0;
   out_5835240796924126265[60] = 0;
   out_5835240796924126265[61] = 0;
   out_5835240796924126265[62] = 0;
   out_5835240796924126265[63] = 0;
   out_5835240796924126265[64] = 0;
   out_5835240796924126265[65] = 0;
}
void h_35(double *state, double *unused, double *out_7732472676037505711) {
   out_7732472676037505711[0] = state[7];
   out_7732472676037505711[1] = state[8];
   out_7732472676037505711[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4182446446264771846) {
   out_4182446446264771846[0] = 0;
   out_4182446446264771846[1] = 0;
   out_4182446446264771846[2] = 0;
   out_4182446446264771846[3] = 0;
   out_4182446446264771846[4] = 0;
   out_4182446446264771846[5] = 0;
   out_4182446446264771846[6] = 0;
   out_4182446446264771846[7] = 1;
   out_4182446446264771846[8] = 0;
   out_4182446446264771846[9] = 0;
   out_4182446446264771846[10] = 0;
   out_4182446446264771846[11] = 0;
   out_4182446446264771846[12] = 0;
   out_4182446446264771846[13] = 0;
   out_4182446446264771846[14] = 0;
   out_4182446446264771846[15] = 0;
   out_4182446446264771846[16] = 0;
   out_4182446446264771846[17] = 0;
   out_4182446446264771846[18] = 0;
   out_4182446446264771846[19] = 0;
   out_4182446446264771846[20] = 0;
   out_4182446446264771846[21] = 0;
   out_4182446446264771846[22] = 0;
   out_4182446446264771846[23] = 0;
   out_4182446446264771846[24] = 0;
   out_4182446446264771846[25] = 0;
   out_4182446446264771846[26] = 0;
   out_4182446446264771846[27] = 0;
   out_4182446446264771846[28] = 0;
   out_4182446446264771846[29] = 0;
   out_4182446446264771846[30] = 1;
   out_4182446446264771846[31] = 0;
   out_4182446446264771846[32] = 0;
   out_4182446446264771846[33] = 0;
   out_4182446446264771846[34] = 0;
   out_4182446446264771846[35] = 0;
   out_4182446446264771846[36] = 0;
   out_4182446446264771846[37] = 0;
   out_4182446446264771846[38] = 0;
   out_4182446446264771846[39] = 0;
   out_4182446446264771846[40] = 0;
   out_4182446446264771846[41] = 0;
   out_4182446446264771846[42] = 0;
   out_4182446446264771846[43] = 0;
   out_4182446446264771846[44] = 0;
   out_4182446446264771846[45] = 0;
   out_4182446446264771846[46] = 0;
   out_4182446446264771846[47] = 0;
   out_4182446446264771846[48] = 0;
   out_4182446446264771846[49] = 0;
   out_4182446446264771846[50] = 0;
   out_4182446446264771846[51] = 0;
   out_4182446446264771846[52] = 0;
   out_4182446446264771846[53] = 1;
   out_4182446446264771846[54] = 0;
   out_4182446446264771846[55] = 0;
   out_4182446446264771846[56] = 0;
   out_4182446446264771846[57] = 0;
   out_4182446446264771846[58] = 0;
   out_4182446446264771846[59] = 0;
   out_4182446446264771846[60] = 0;
   out_4182446446264771846[61] = 0;
   out_4182446446264771846[62] = 0;
   out_4182446446264771846[63] = 0;
   out_4182446446264771846[64] = 0;
   out_4182446446264771846[65] = 0;
}
void h_32(double *state, double *unused, double *out_4060273412368695540) {
   out_4060273412368695540[0] = state[3];
   out_4060273412368695540[1] = state[4];
   out_4060273412368695540[2] = state[5];
   out_4060273412368695540[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5555253144343067209) {
   out_5555253144343067209[0] = 0;
   out_5555253144343067209[1] = 0;
   out_5555253144343067209[2] = 0;
   out_5555253144343067209[3] = 1;
   out_5555253144343067209[4] = 0;
   out_5555253144343067209[5] = 0;
   out_5555253144343067209[6] = 0;
   out_5555253144343067209[7] = 0;
   out_5555253144343067209[8] = 0;
   out_5555253144343067209[9] = 0;
   out_5555253144343067209[10] = 0;
   out_5555253144343067209[11] = 0;
   out_5555253144343067209[12] = 0;
   out_5555253144343067209[13] = 0;
   out_5555253144343067209[14] = 0;
   out_5555253144343067209[15] = 0;
   out_5555253144343067209[16] = 0;
   out_5555253144343067209[17] = 0;
   out_5555253144343067209[18] = 0;
   out_5555253144343067209[19] = 0;
   out_5555253144343067209[20] = 0;
   out_5555253144343067209[21] = 0;
   out_5555253144343067209[22] = 0;
   out_5555253144343067209[23] = 0;
   out_5555253144343067209[24] = 0;
   out_5555253144343067209[25] = 0;
   out_5555253144343067209[26] = 1;
   out_5555253144343067209[27] = 0;
   out_5555253144343067209[28] = 0;
   out_5555253144343067209[29] = 0;
   out_5555253144343067209[30] = 0;
   out_5555253144343067209[31] = 0;
   out_5555253144343067209[32] = 0;
   out_5555253144343067209[33] = 0;
   out_5555253144343067209[34] = 0;
   out_5555253144343067209[35] = 0;
   out_5555253144343067209[36] = 0;
   out_5555253144343067209[37] = 0;
   out_5555253144343067209[38] = 0;
   out_5555253144343067209[39] = 0;
   out_5555253144343067209[40] = 0;
   out_5555253144343067209[41] = 0;
   out_5555253144343067209[42] = 0;
   out_5555253144343067209[43] = 0;
   out_5555253144343067209[44] = 0;
   out_5555253144343067209[45] = 0;
   out_5555253144343067209[46] = 0;
   out_5555253144343067209[47] = 0;
   out_5555253144343067209[48] = 0;
   out_5555253144343067209[49] = 1;
   out_5555253144343067209[50] = 0;
   out_5555253144343067209[51] = 0;
   out_5555253144343067209[52] = 0;
   out_5555253144343067209[53] = 0;
   out_5555253144343067209[54] = 0;
   out_5555253144343067209[55] = 0;
   out_5555253144343067209[56] = 0;
   out_5555253144343067209[57] = 0;
   out_5555253144343067209[58] = 0;
   out_5555253144343067209[59] = 0;
   out_5555253144343067209[60] = 0;
   out_5555253144343067209[61] = 0;
   out_5555253144343067209[62] = 0;
   out_5555253144343067209[63] = 0;
   out_5555253144343067209[64] = 0;
   out_5555253144343067209[65] = 0;
   out_5555253144343067209[66] = 0;
   out_5555253144343067209[67] = 0;
   out_5555253144343067209[68] = 0;
   out_5555253144343067209[69] = 0;
   out_5555253144343067209[70] = 0;
   out_5555253144343067209[71] = 0;
   out_5555253144343067209[72] = 1;
   out_5555253144343067209[73] = 0;
   out_5555253144343067209[74] = 0;
   out_5555253144343067209[75] = 0;
   out_5555253144343067209[76] = 0;
   out_5555253144343067209[77] = 0;
   out_5555253144343067209[78] = 0;
   out_5555253144343067209[79] = 0;
   out_5555253144343067209[80] = 0;
   out_5555253144343067209[81] = 0;
   out_5555253144343067209[82] = 0;
   out_5555253144343067209[83] = 0;
   out_5555253144343067209[84] = 0;
   out_5555253144343067209[85] = 0;
   out_5555253144343067209[86] = 0;
   out_5555253144343067209[87] = 0;
}
void h_13(double *state, double *unused, double *out_8721212907274843752) {
   out_8721212907274843752[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8721212907274843752[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8721212907274843752[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5963583612306586158) {
   out_5963583612306586158[0] = 0;
   out_5963583612306586158[1] = 0;
   out_5963583612306586158[2] = 0;
   out_5963583612306586158[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5963583612306586158[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5963583612306586158[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5963583612306586158[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5963583612306586158[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5963583612306586158[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5963583612306586158[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5963583612306586158[10] = 0;
   out_5963583612306586158[11] = 0;
   out_5963583612306586158[12] = 0;
   out_5963583612306586158[13] = 0;
   out_5963583612306586158[14] = 0;
   out_5963583612306586158[15] = 0;
   out_5963583612306586158[16] = 0;
   out_5963583612306586158[17] = 0;
   out_5963583612306586158[18] = 0;
   out_5963583612306586158[19] = 0;
   out_5963583612306586158[20] = 0;
   out_5963583612306586158[21] = 0;
   out_5963583612306586158[22] = 0;
   out_5963583612306586158[23] = 0;
   out_5963583612306586158[24] = 0;
   out_5963583612306586158[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5963583612306586158[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5963583612306586158[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5963583612306586158[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5963583612306586158[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5963583612306586158[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5963583612306586158[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5963583612306586158[32] = 0;
   out_5963583612306586158[33] = 0;
   out_5963583612306586158[34] = 0;
   out_5963583612306586158[35] = 0;
   out_5963583612306586158[36] = 0;
   out_5963583612306586158[37] = 0;
   out_5963583612306586158[38] = 0;
   out_5963583612306586158[39] = 0;
   out_5963583612306586158[40] = 0;
   out_5963583612306586158[41] = 0;
   out_5963583612306586158[42] = 0;
   out_5963583612306586158[43] = 0;
   out_5963583612306586158[44] = 0;
   out_5963583612306586158[45] = 0;
   out_5963583612306586158[46] = 0;
   out_5963583612306586158[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5963583612306586158[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5963583612306586158[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5963583612306586158[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5963583612306586158[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5963583612306586158[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5963583612306586158[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5963583612306586158[54] = 0;
   out_5963583612306586158[55] = 0;
   out_5963583612306586158[56] = 0;
   out_5963583612306586158[57] = 0;
   out_5963583612306586158[58] = 0;
   out_5963583612306586158[59] = 0;
   out_5963583612306586158[60] = 0;
   out_5963583612306586158[61] = 0;
   out_5963583612306586158[62] = 0;
   out_5963583612306586158[63] = 0;
   out_5963583612306586158[64] = 0;
   out_5963583612306586158[65] = 0;
}
void h_14(double *state, double *unused, double *out_7967825371321883915) {
   out_7967825371321883915[0] = state[10];
   out_7967825371321883915[1] = state[11];
   out_7967825371321883915[2] = state[12];
}
void H_14(double *state, double *unused, double *out_8103003324156611940) {
   out_8103003324156611940[0] = 0;
   out_8103003324156611940[1] = 0;
   out_8103003324156611940[2] = 0;
   out_8103003324156611940[3] = 0;
   out_8103003324156611940[4] = 0;
   out_8103003324156611940[5] = 0;
   out_8103003324156611940[6] = 0;
   out_8103003324156611940[7] = 0;
   out_8103003324156611940[8] = 0;
   out_8103003324156611940[9] = 0;
   out_8103003324156611940[10] = 1;
   out_8103003324156611940[11] = 0;
   out_8103003324156611940[12] = 0;
   out_8103003324156611940[13] = 0;
   out_8103003324156611940[14] = 0;
   out_8103003324156611940[15] = 0;
   out_8103003324156611940[16] = 0;
   out_8103003324156611940[17] = 0;
   out_8103003324156611940[18] = 0;
   out_8103003324156611940[19] = 0;
   out_8103003324156611940[20] = 0;
   out_8103003324156611940[21] = 0;
   out_8103003324156611940[22] = 0;
   out_8103003324156611940[23] = 0;
   out_8103003324156611940[24] = 0;
   out_8103003324156611940[25] = 0;
   out_8103003324156611940[26] = 0;
   out_8103003324156611940[27] = 0;
   out_8103003324156611940[28] = 0;
   out_8103003324156611940[29] = 0;
   out_8103003324156611940[30] = 0;
   out_8103003324156611940[31] = 0;
   out_8103003324156611940[32] = 0;
   out_8103003324156611940[33] = 1;
   out_8103003324156611940[34] = 0;
   out_8103003324156611940[35] = 0;
   out_8103003324156611940[36] = 0;
   out_8103003324156611940[37] = 0;
   out_8103003324156611940[38] = 0;
   out_8103003324156611940[39] = 0;
   out_8103003324156611940[40] = 0;
   out_8103003324156611940[41] = 0;
   out_8103003324156611940[42] = 0;
   out_8103003324156611940[43] = 0;
   out_8103003324156611940[44] = 0;
   out_8103003324156611940[45] = 0;
   out_8103003324156611940[46] = 0;
   out_8103003324156611940[47] = 0;
   out_8103003324156611940[48] = 0;
   out_8103003324156611940[49] = 0;
   out_8103003324156611940[50] = 0;
   out_8103003324156611940[51] = 0;
   out_8103003324156611940[52] = 0;
   out_8103003324156611940[53] = 0;
   out_8103003324156611940[54] = 0;
   out_8103003324156611940[55] = 0;
   out_8103003324156611940[56] = 1;
   out_8103003324156611940[57] = 0;
   out_8103003324156611940[58] = 0;
   out_8103003324156611940[59] = 0;
   out_8103003324156611940[60] = 0;
   out_8103003324156611940[61] = 0;
   out_8103003324156611940[62] = 0;
   out_8103003324156611940[63] = 0;
   out_8103003324156611940[64] = 0;
   out_8103003324156611940[65] = 0;
}
void h_33(double *state, double *unused, double *out_5193764193759423758) {
   out_5193764193759423758[0] = state[16];
   out_5193764193759423758[1] = state[17];
   out_5193764193759423758[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7333003450903629450) {
   out_7333003450903629450[0] = 0;
   out_7333003450903629450[1] = 0;
   out_7333003450903629450[2] = 0;
   out_7333003450903629450[3] = 0;
   out_7333003450903629450[4] = 0;
   out_7333003450903629450[5] = 0;
   out_7333003450903629450[6] = 0;
   out_7333003450903629450[7] = 0;
   out_7333003450903629450[8] = 0;
   out_7333003450903629450[9] = 0;
   out_7333003450903629450[10] = 0;
   out_7333003450903629450[11] = 0;
   out_7333003450903629450[12] = 0;
   out_7333003450903629450[13] = 0;
   out_7333003450903629450[14] = 0;
   out_7333003450903629450[15] = 0;
   out_7333003450903629450[16] = 1;
   out_7333003450903629450[17] = 0;
   out_7333003450903629450[18] = 0;
   out_7333003450903629450[19] = 0;
   out_7333003450903629450[20] = 0;
   out_7333003450903629450[21] = 0;
   out_7333003450903629450[22] = 0;
   out_7333003450903629450[23] = 0;
   out_7333003450903629450[24] = 0;
   out_7333003450903629450[25] = 0;
   out_7333003450903629450[26] = 0;
   out_7333003450903629450[27] = 0;
   out_7333003450903629450[28] = 0;
   out_7333003450903629450[29] = 0;
   out_7333003450903629450[30] = 0;
   out_7333003450903629450[31] = 0;
   out_7333003450903629450[32] = 0;
   out_7333003450903629450[33] = 0;
   out_7333003450903629450[34] = 0;
   out_7333003450903629450[35] = 0;
   out_7333003450903629450[36] = 0;
   out_7333003450903629450[37] = 0;
   out_7333003450903629450[38] = 0;
   out_7333003450903629450[39] = 1;
   out_7333003450903629450[40] = 0;
   out_7333003450903629450[41] = 0;
   out_7333003450903629450[42] = 0;
   out_7333003450903629450[43] = 0;
   out_7333003450903629450[44] = 0;
   out_7333003450903629450[45] = 0;
   out_7333003450903629450[46] = 0;
   out_7333003450903629450[47] = 0;
   out_7333003450903629450[48] = 0;
   out_7333003450903629450[49] = 0;
   out_7333003450903629450[50] = 0;
   out_7333003450903629450[51] = 0;
   out_7333003450903629450[52] = 0;
   out_7333003450903629450[53] = 0;
   out_7333003450903629450[54] = 0;
   out_7333003450903629450[55] = 0;
   out_7333003450903629450[56] = 0;
   out_7333003450903629450[57] = 0;
   out_7333003450903629450[58] = 0;
   out_7333003450903629450[59] = 0;
   out_7333003450903629450[60] = 0;
   out_7333003450903629450[61] = 0;
   out_7333003450903629450[62] = 1;
   out_7333003450903629450[63] = 0;
   out_7333003450903629450[64] = 0;
   out_7333003450903629450[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_647664208034133157) {
  H(in_vec, out_647664208034133157);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_801155884322822811) {
  err_fun(nom_x, delta_x, out_801155884322822811);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6625171334681773460) {
  inv_err_fun(nom_x, true_x, out_6625171334681773460);
}
void live_H_mod_fun(double *state, double *out_6447180147902774969) {
  H_mod_fun(state, out_6447180147902774969);
}
void live_f_fun(double *state, double dt, double *out_579222733045003540) {
  f_fun(state,  dt, out_579222733045003540);
}
void live_F_fun(double *state, double dt, double *out_4660468052446174995) {
  F_fun(state,  dt, out_4660468052446174995);
}
void live_h_4(double *state, double *unused, double *out_9009797269586341661) {
  h_4(state, unused, out_9009797269586341661);
}
void live_H_4(double *state, double *unused, double *out_815784388892164470) {
  H_4(state, unused, out_815784388892164470);
}
void live_h_9(double *state, double *unused, double *out_7967825371321883915) {
  h_9(state, unused, out_7967825371321883915);
}
void live_H_9(double *state, double *unused, double *out_8103003324156611940) {
  H_9(state, unused, out_8103003324156611940);
}
void live_h_10(double *state, double *unused, double *out_719177485573458568) {
  h_10(state, unused, out_719177485573458568);
}
void live_H_10(double *state, double *unused, double *out_5055567580639733571) {
  H_10(state, unused, out_5055567580639733571);
}
void live_h_12(double *state, double *unused, double *out_4435673340096716254) {
  h_12(state, unused, out_4435673340096716254);
}
void live_H_12(double *state, double *unused, double *out_5835240796924126265) {
  H_12(state, unused, out_5835240796924126265);
}
void live_h_35(double *state, double *unused, double *out_7732472676037505711) {
  h_35(state, unused, out_7732472676037505711);
}
void live_H_35(double *state, double *unused, double *out_4182446446264771846) {
  H_35(state, unused, out_4182446446264771846);
}
void live_h_32(double *state, double *unused, double *out_4060273412368695540) {
  h_32(state, unused, out_4060273412368695540);
}
void live_H_32(double *state, double *unused, double *out_5555253144343067209) {
  H_32(state, unused, out_5555253144343067209);
}
void live_h_13(double *state, double *unused, double *out_8721212907274843752) {
  h_13(state, unused, out_8721212907274843752);
}
void live_H_13(double *state, double *unused, double *out_5963583612306586158) {
  H_13(state, unused, out_5963583612306586158);
}
void live_h_14(double *state, double *unused, double *out_7967825371321883915) {
  h_14(state, unused, out_7967825371321883915);
}
void live_H_14(double *state, double *unused, double *out_8103003324156611940) {
  H_14(state, unused, out_8103003324156611940);
}
void live_h_33(double *state, double *unused, double *out_5193764193759423758) {
  h_33(state, unused, out_5193764193759423758);
}
void live_H_33(double *state, double *unused, double *out_7333003450903629450) {
  H_33(state, unused, out_7333003450903629450);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
